//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Wenn der Code neu generiert wird, gehen alle Änderungen an dieser Datei verloren
// </auto-generated>
//------------------------------------------------------------------------------
namespace RemoteControlServer.CommandTarget
{
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Text;
    using Definitions;
    using System.Windows.Forms;
    using System.Runtime.InteropServices;
    using WindowsInput;
    public class Windows : ICommandTarget
    {
        public void refreshClientStates(Client client)
        {

        }

        [CommandRegistration("MK_MouseMove")]
        public void mouseMove(int dx, int dy)
        {
            Cursor.Position = new System.Drawing.Point(Cursor.Position.X + dx * 2, Cursor.Position.Y + dy * 2);
        }

        [CommandRegistration("MK_MouseLeftDown")]
        public void mouseLeftDown()
        {
            mouse_event(MOUSEEVENTF_LEFTDOWN, (uint)Cursor.Position.X, (uint)Cursor.Position.Y, 0, 0);
        }

        [CommandRegistration("MK_MouseLeftUp")]
        public void mouseLeftUp()
        {
            mouse_event(MOUSEEVENTF_LEFTUP, (uint)Cursor.Position.X, (uint)Cursor.Position.Y, 0, 0);
        }

        [CommandRegistration("MK_MouseRightDown")]
        public void mouseRightDown()
        {
            mouse_event(MOUSEEVENTF_RIGHTDOWN, (uint)Cursor.Position.X, (uint)Cursor.Position.Y, 0, 0);
        }

        [CommandRegistration("MK_MouseRightUp")]
        public void mouseRightUp()
        {
            mouse_event(MOUSEEVENTF_RIGHTUP, (uint)Cursor.Position.X, (uint)Cursor.Position.Y, 0, 0);
        }

        [CommandRegistration("MK_KeyDown")]
        public void keyDown(int keyCode)
        {
            InputSimulator.SimulateKeyDown((VirtualKeyCode)keyCode);
        }

        [CommandRegistration("MK_KeyUp")]
        public void keyUp(int keyCode)
        {
            InputSimulator.SimulateKeyUp((VirtualKeyCode)keyCode);
        }

        [DllImport("user32.dll", CharSet = CharSet.Auto, CallingConvention = CallingConvention.StdCall)]
        public static extern void mouse_event(uint dwFlags, uint dx, uint dy, uint cButtons, uint dwExtraInfo);

        private const int MOUSEEVENTF_LEFTDOWN = 0x02;
        private const int MOUSEEVENTF_LEFTUP = 0x04;
        private const int MOUSEEVENTF_RIGHTDOWN = 0x08;
        private const int MOUSEEVENTF_RIGHTUP = 0x10;
    }
}

